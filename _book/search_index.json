[
["index.html", "Stat1: statistische modellen Voorwoord", " Stat1: statistische modellen Mark Smits 2019-07-10 Voorwoord Afgelopen blok hebben jullie al aardig wat data verzameld met practica, en de meeste ook al met hun bioxperience-project. In dit blok leren jullie om op basis van data betrouwbare uitspraken te doen. Zoals je gemerkt zult hebben in de practica, krijgt iedere groep een iets andere uitkomst uit precies hetzelfde experiment. Wat is nu de waarheid? Statistiek is ervoor om de betrouwbaarheid van de uitkomsten te berekenen. Op die manier weet je wat je wel en niet kan beweren op basis van je onderzoek. "],
["opzet.html", "Opzet", " Opzet Blok 4 is opgebouwd uit zes werkcolleges van ieder anderhalf uur en een hoorcollege aan het eind. Ieder werkcollege begint met een korte inleiding over het onderwerp, gevolgd door een opdracht die je in groepjes uitvoert en mogelijk ook individuele opdrachten. Houd van de opdrachten een portfolio bij. We gaan dit blok het boek The Analysis of Biological Data gebruiken. Jullie worden geacht vooraf de aangegeven hoofdstukken gelezen te hebben! "],
["werkcollege-1-statistische-vragen-bij-grafieken.html", "Werkcollege 1: Statistische vragen bij grafieken", " Werkcollege 1: Statistische vragen bij grafieken Lees Chapter 1 (Statistics and samples): Lees Chapter 2 (Displaying data): "],
["soorten-grafieken.html", "Soorten grafieken", " Soorten grafieken Een grafiek is dé manier om data te presenteren. Het laat in één oogopslag zien wat voor patronen er in de data zitten. Verschillende soorten data vragen om verschillende soorten grafieken. Een aantal mogelijke soorten grafieken: Boxplot Spreidingsdiagram Staafdiagram Taartdiagram/mozaiekplot Opdracht 1 Soorten figuren Zoek in de literatuur, die je verzameld hebt voor bioxperience, naar voorbeelden voor ieder van bovenstaande typen figuren, en kopieer ze naar je portfolio. Komt niet iedere soort grafiek voor, dan vindt je op blackboard een serie artikelen waar ze wel in voorkomen. Data op de juiste manier presenteren is de eerste stap in het analyseren van je data. "],
["soorten-data.html", "Soorten data", " Soorten data Opdracht 2 Soorten data Data kan verdeeld worden in drie niveau’s. Zoek in Analysis of Biological Data op welke niveau’s dat zijn, noteer ze in je portfolio. Benoem de niveaus van de data in de figuren die je in de vorige opdracht hebt verzameld. "],
["statistische-vragen.html", "Statistische vragen", " Statistische vragen Achter ieder onderzoek, en dus ook achter iedere dataset, zitten een of meerdere onderzoeksvragen. De kunst is om een figuur zo op te zetten dat de vraag daarmee beantwoord kan worden. Een onderzoeksvraag wordt daarmee automatisch ook een statistische vraag omdat je met data uit een steekproef werkt. Daarmee heb je te maken met onzekerheid. Opdracht 3 Onderzoeksvragen Zoek uit welke onderzoeksvragen horen bij de figuren die je hebt uitgezocht in de vorige opdrachten. Zoek uit (tip: check materiaal en methode) welke statistische toets gebruikt is om de onderzoeksvraag te beantwoorden. Wat is de conclusie van de statistische toets? Noteer alle antwoorden in je portfolio. (#exr:oef_h1_2) Maak de volgende opgaven uit het boek: 1.2 2.6 2.8 2.11 2.15 "],
["werkcollege-2-statistische-toetsen.html", "Werkcollege 2: Statistische toetsen", " Werkcollege 2: Statistische toetsen Lees Chapter 6 (Hypothesis testing) Belangrijkste leerdoelen: Hypotheses kunnen opstellen Kunnen omschrijven wat de p-waarde is die uit een statistische toets rolt Begrijpen wat fouten van eerste (type I) en tweede (type II) soort zijn. "],
["hypotheses.html", "Hypotheses", " Hypotheses Statistische toetsen zijn ontwikkeld om helder te krijgen hoe betrouwbaar een bepaalde uitspraak is. In blok 2 hebben jullie geleerd om vanuit een steekproef het betrouwbaarheidsinterval te berekenen van het gemiddelde. Je geeft daarmee aan dat het gemiddelde, met een bepaalde waarschijnlijkheid (meestal 95%) tussen een minimale en maximale waarde zit. Met een statistische toets, doe je precies het omgekeerde. In plaats van het bepalen van het betrouwbaarheidsinterval, bepaal je de waarschijnlijkheid dat iets gelijk is aan een preciese waarde (je veronderstelling). De vergelijking die je maakt wordt de nul-hypothese genoemd. Wanneer het helemaal niet waarschijnlijk is dat je nul-hypothese waar is, verwerp je deze. Je neemt dan de alternatieve hypothese aan. De alternatieve hypothese is nooit precies (bijv. het gemiddelde is niet gelijk aan 10). Meestal is de nul-hypothese niet jouw onderzoekshypothese! Meestal verwacht je een verschil tussen bijv. twee behandelingen, maar je nul-hypothese stelt dat er geen verschil is. Opdracht 4 Hypotheses opstellen Maak de volgende opgaven: Opgave 15 (blz. 170) Opgave 16 (blz. 170) Ogave 17 (blz. 171) "],
["type-i-en-type-ii-fouten.html", "Type I en type II fouten", " Type I en type II fouten Je hoopt natuurlijk altijd de juiste conclusie te trekken uit je data. Helaas is dat niet altijd het geval. Gelukkig kunnen we met statistiek wel aangeven hoe betrouwbaar je conclusie is. De meeste kritieke fout is het ten onrechte verwerpen van de nul-hypothese: je toont een verschil aan die er niet is. De kans op deze fout wordt (bijna) standaard op 5% gezet. De p-waarde geeft de waarschijnlijkheid dat de nul-hypothese waar is. Komt de p-waarde onder de 0,05 (=5%), dan verwerpen we de nul-hypothese. Een irritante fout is als er echt wel een verschil is (dus de nul-hypothese is niet waar), maar je kan het niet aantonen. Dit wordt een fout van de tweede soort genoemd. Hoe strenger je bent voor de kans op een fout van de eerste soort, hoe groter de kans op een fout van de tweede soort (denk daar maar even over na!). Opdracht 5 Type I en type II fouten Beschrijf in eigen woorden de betekenis van: p-waarde fout van de eerste soort fout van de tweede soort "],
["eenzijdig-en-tweezijdig-toetsen.html", "Eenzijdig en tweezijdig toetsen", " Eenzijdig en tweezijdig toetsen Als je wilt testen of er een verschil is tussen twee groepen, dan test je tweezijdig. Het maakt niet uit welke van de twee groter is, als er maar verschil is. Soms ben je alleen geïnteresseerd of er een verschil in één richting is, bijv. of biologen hoger scoren voor biologie dan voor wiskunde. Dan ben je eenzijdig aan het toetsen. "],
["simuleren.html", "Simuleren", " Simuleren De beste manier om begrip te krijgen van statistische toetsen, is om met data te simuleren. R is hier ideaal voor. Met de functie sample() kan je een random sample nemen uit een populatie: steekproef1 &lt;- sample(c(&quot;links&quot;, &quot;rechts&quot;), 18, replace = TRUE) De functie sample() heeft in bovenstaand voorbeeld 3 argumenten. Het eerste argument is een vector met de mogelijke waarden in de populatie, het tweede argument geeft de grootte van de steekproef en het derde argument geeft aan dat er een oneindige populatie is met “links”- en“rechts”-waarden. De functie neemt aan dat “links” en “rechts” beiden evenveel voorkomen. Met de table-functie kan je gemakkelijk checken hoeveel rechtshandige padden er in de steekproef zitten: table(steekproef1) Opdracht 6 Steekproef Gebruik bovenstaande code om een steekproef te nemen van 18 padden Geef het aantal rechtshandige padden door aan de docent. Of via de volgende link Stel dat er wel een voorkeur voor rechtshandigheid is bij padden. Zeg dat 80% van de padden rechtshandig is. Met een iets aangepaste code kunnen we weer een steekproef nemen, maar nu van deze populatie: steekproef2 &lt;- sample(c(&quot;links&quot;, &quot;rechts&quot;), 18, replace = TRUE, prob = c(0.2, 0.8)) Opdracht 7 Steekproef2 Neem nu een steekproef van de populatie padden met 80% rechtshandigheid. Geef het aantal rechtshandige padden door aan de docent. Of via de link. Je ziet dat het moeilijk is om de juiste conclusie te trekken uit een steekproef. Er zit altijd een mate van onzekerheid omheen. De oplossing is om die onzekerheid goed te omschrijven. Met een statistische toets neem je de kansverdeling onder de nulhypothese als basis. In het geval van de padden gaan we onder de nulhypothese er van uit dat er geen verschil is tussen kans op links- of rechtshandigheid bij padden. Met R code kunnen we die kansverdeling berekenen en in een histogram weergeven: library(tidyverse) #10000 steekproeven nemen, resultaat is een matrix samples &lt;- replicate(10000, sample(c(&quot;links&quot;, &quot;rechts&quot;), 18, replace = TRUE)) #Matrix omzetten naar een dataframe samples &lt;- data.frame(samples) %&gt;% gather(key = &quot;steekproef&quot;, value = &quot;voorkeur&quot;) #Aantal rechtshandigen per steekproef rechts &lt;- samples %&gt;% filter(voorkeur == &quot;rechts&quot;) %&gt;% group_by(steekproef) %&gt;% count() #Histogram maken van het gevonden aantal rechtshandige padden per steekproef rechts %&gt;% ggplot(aes(n)) + geom_histogram(binwidth = 1, center = 0, fill = &quot;white&quot;, colour = &quot;black&quot;) + xlab(&quot;aantal rechtshandige padden&quot;) + theme_classic() Met de volgende functie kan je de kans berekenen (onder de nulhypothese) op minstens het aantal rechtshandige padden, als in je eigen steekproef (als voorbeeld minstens 14): #Op basis van gesimuleerde kansverdeling sum(rechts$n&gt;=14)/length(rechts$n) #Op basis van theoretische kansverdeling binom.test(14,18, alternative = &quot;greater&quot;) Opdracht 8 Statistische toets Gebruik bovenstaande code om uit te rekenen wat de kans is op minstens zoveel rechtshandige padden als je gevonden hebt in je steekproef (doe dat voor beide steekproeven). Stel de drempelwaarde van de kans op fout van de eerste soort op 0,05. Wat is dan je conclusie bij beide steekproeven. Geef dat door aan de docent. Of via de link. Als iedereen het heeft uitgevoerd: Hoeveel procent van de studenten verwerpt ten onrechte de nul-hypothese van de eerste steekproef (type I fout)? Hoeveel procent van de studenten verwerpt niet de nulhypothese (type II fout)? (#exr:oefeningen_H6) * 6.1 * 6.2 * 6.3 * 6.7 * 6.8 * 6.10 * 6.12 "],
["normale-verdeling.html", "Normale verdeling", " Normale verdeling Lees Chapter 10 (Normal distribution), behalve 10.2, 10.4 en 10.7. Zoals jullie in blok 2 hebben geleerd, gedraagt veel variatie zich op een karakteristieke manier die omschreven kan worden als de normale verdeling. Ter illustratie hieronder een histogram van de gemiddelde cijfers van het HAVO-eindexamen biologie per school weergegeven. Je ziet dat de verdeling min of meer een normale verdeling volgt (de zwarte lijn). Opdracht 9 normale verdeling Op basis van welke twee parameters is bovenstaande normale verdeling gebaseerd? "],
["r-als-alternatief-voor-een-tabel.html", "R als alternatief voor een tabel", " R als alternatief voor een tabel In blok 2 heb je, met behulp van een tabel, de volgende vraag op kunnen lossen: Koeien van het ras Holstein-Friesian hebben gemiddeld een gewicht van 540 kg, met een standaarddeviatie van 5 kg. De vraag is: Hoe hoog is de fractie koeien van het ras Holstein-Friesian met een gewicht tussen 542 en 545 kg? Hoe pakte je dat aan in blok 2? Het gaat om de volgende verdeling: \\(\\underline{x} \\sim N(\\mu=540, \\sigma=5)\\). Fractie koeien tussen 542 en 545 kg: \\(P(542&lt;\\underline{x}&lt;545)\\). Volgende stap is omrekenen naar de standaard normale verdeling, je berekent dan de z-waardes van 542 en 545 kg: \\(P \\left( \\frac{542-540}{5}&lt;Z&lt; \\frac{545-540}{5} \\right)\\). Vervolgens zoek je in de tabel de kans op \\(P \\left( Z&gt;\\frac{2}{5} \\right)\\) en \\(P \\left( Z&gt;\\frac{5}{5} \\right)\\) en trek deze van elkaar af: \\(0.3446-0.1587 = 0.1859\\) In plaats van de tabel, kan je ook R-code gebruiken: pnorm(). NB: deze functie berekent standaard \\(P \\left( \\underline{x}&lt;q \\right)\\), dus de lower tail als je een normale verdeling bekijkt. Wil je het oppervlak aan de rechterkant van q weten, voeg dan het argument lower.tail = FALSE toe. Verder kan je ook aangeven wat het gemiddelde en de standaarddeviatie is, je hoeft dus niet eerst de z-waarden uit te rekenen. Wil je nu weten welke fractie koeien tussen 542 en 545 kg is, voer dan de volgende code uit: pnorm(542, mean = 540, sd = 5, lower.tail = FALSE) - pnorm(545, mean = 540, sd = 5, lower.tail = FALSE) Of korter: pnorm(542, 540, 5, lower.tail = FALSE) - pnorm(545, 540, 5, lower.tail = FALSE) Opdracht 10 Koeien, deel 1 Schets de normale verdeling van het gewicht van de koeien. Geef met twee kleuren aan welke oppervlakken met bovenstaande code worden uitgerekend. Stel, we willen weten welk deel van de populatie koeien minder dan 430 kg weegt. Het gaat dan om het rood gekleurde deel in onderstaande grafiek: Opdracht 11 Koeien Bereken de fractie koeien lichter dan 430 kg. "],
["hypotheses-toetsen.html", "Hypotheses toetsen", " Hypotheses toetsen Een boer vermoedt dat zijn koeien lichter zijn dan de gemiddelde Holsteiner-Friesian. Hij zet een koe op de weegschaal, en leest 535 kg af. Opdracht 12 Koe, deel 3 Bereken m.b.v. pnorm() hoe waarschijnlijk het is dat je een koe hebt die 535 kg of minder weegt bij een populatiegemiddelde van 540 kg en standaarddeviatie van 5 kg. Bovenstaande opgave is de essentie van een statistische toets. Je stelt een nulhypothese op: Het gewicht van de koeien van de boer wijkt niet af van het gewicht van Holstein-Friesian koeien. Blijkt je steekproef heel onwaarschijnlijk te zijn onder de nulhypothese, dan verwerp je deze, en neem je de alternatieve hypothese aan. In dit geval gaat het om een eenzijdige toets (de boer denkt dat zijn koeien lichter zijn). In het geval dat de boer vermoedt dat het gewicht afwijkt van Holstein-Friesians, dan hebben we het over een tweezijdige toets. De kans op een minstens zo grote afwijking als gevonden kan twee kanten op zijn: lichter dan 535 kg zwaarder dan 545 kg Hieronder is die kans geïllustreerd: Je ziet dus dat als je tweezijdig toetst, de waarschijnlijk dat minstens zo’n grote afwijking voorkomt, twee keer zo groot is dan als je eenzijdig toetst. De boer slaat er zijn statistiekaantekeningen op na, en komt tot de conclusie dat hij een grotere steekproef moet nemen. Hij zet 6 koeien op een weegbrug en leest 3216 kg af, dus het steekproefgemiddelde is 536 kg. Opdracht 13 Koe, deel 4 De standaarddeviatie voor het gewicht van één Holstein-Friesiankoe is 5 kg. Wat wordt de standaarddeviatie voor een steekproef van 6 koeien? Bereken, met deze standaarddeviatie de waarschijnlijk van maximaal een gemiddeld gewicht van 536 als de nulhypothese waar is? Bereken de waarschijnlijkheid als je tweezijdig toetst. "],
["t-toets-voor-een-steekproef.html", "t-toets voor één steekproef", " t-toets voor één steekproef Lees Paragraph 11.3 (The one-sample t-test) "],
["geschatte-standaarddeviatie.html", "Geschatte standaarddeviatie", " Geschatte standaarddeviatie In de vorige les hebben jullie met de normale verdeling gerekend. Hiermee kan je de waarschijnlijkheid berekenen of een bepaalde steekproef afwijkt van een theoretische waarde. Allemaal leuk in theorie, maar de praktijk is weerbarstig. Dat is niet omdat variatie zich niet volgens een normale kansverdeling gedraagt, maar omdat je de standaarddeviatie schat aan de hand van je steekproef. Als voorbeeld gebruiken we weer het gewicht van de koeien. Het gewicht is gemiddeld 540 kg met een standaarddeviatie van 5 kg. Opdracht 14 standaardeviatie schatten Voer de volgende functie uit: s &lt;- replicate(10000, sd(rnorm(3, 540, 5))) Nu heb je 10000 keer een steekproef getrokken uit de populatie van de koeien, en van iedere steekproef heb je de standaarddeviatie berekend. Maak hier nu een histogram van (op de snelle manier): hist(s) Wat valt je op? "],
["z-toets.html", "Z-toets", " Z-toets Zoals je in de vorige oefening zag, is gemiddeld je schatting van de standaarddeviatie kleiner dan de werkelijke standaarddeviatie. Als je dan, op basis van de geschatte standaarddeviatie, de kansverdeling van je nulhypothese opzet, dan is die klokvormige kansverdeling smaller dan in werkelijkheid. Dus verwerp je sneller je nulhypothese. Als voorbeeld weer de koeien. De volgende code voert 10000 keer een Z-toets uit op random steekproeven van n=3, met de juiste standaarddeviatie: #Functie om steekproef te nemen en z-toets erop uit te voeren z_sigma &lt;- function(n, mean, sigma) { sample &lt;- rnorm(n, mean, sigma) p &lt;- pnorm(mean(sample), mean, sigma/sqrt(n)) } #10000 keer bovenstaande functie uitvoeren ps &lt;- replicate(10000, z_sigma(n=3, mean=540, sigma=5)) #welke fractie van de samples verwerpt (ten onrechte!) de H0? alpha=0.05 length(ps[ps&lt;alpha])/length(ps) ## [1] 0.0501 Opdracht 15 Z_sigma Neem bovenstaande code over in een script, en voer uit. Varieer met de \\(\\alpha\\) en check of de fractie significant afwijkende steekproeven de volgt. Stel nu dat we de standaarddeviatie van de populatie niet weten, dan moeten we die schatten vanuit de steekproef. Wat heeft dat voor consequenties voor de fout van de eerste soort (ten onrechte H0 verwerpen)? Dat kan je testen met de volgende code: #Functie om steekproef te nemen en z-toets erop uit te voeren z_sigma &lt;- function(n, mean, sigma) { sample &lt;- rnorm(n, mean, sigma) p &lt;- pnorm(mean(sample), mean, sd(sample)/sqrt(n)) } #10000 keer bovenstaande functie uitvoeren ps &lt;- replicate(10000, z_sigma(n=3, mean=540, sigma=5)) #welke fractie van de samples verwerpt (ten onrechte!) de H0? alpha=0.05 length(ps[ps&lt;alpha])/length(ps) ## [1] 0.1154 Opdracht 16 Z_s Neem bovenstaande code over in een script, en voer uit. Varieer met de \\(\\alpha\\) en check of de fractie significant afwijkende steekproeven de \\(\\alpha\\) volgt. Herhaal met n=30 (dus een steekproefgrootte van 30) Wat is het verschil? "],
["t-verdeling.html", "t-verdeling", " t-verdeling In de vorige oefening zag je het effect van een te kleine schatting van je standaarddeviatie op het voorkomen van een type-1-fout (ten onrechte verwerpen van de Ho). Dit is vooral een probleem bij kleine steekproeven. In een beroemd wetenschappelijk artikel van een mederwerker van Guinness (onder pseudoniem Student), wordt dit probleem uitgelegd en een oplossing gegeven. De oplossing is om een aangepaste kansverdeling te gebruiken: de t-verdeling: In rood is de t-verdeling en met een zwarte lijn is de normale verdeling geplot. Je ziet dat de staarten van de t-verdeling dikker zijn dan de normale verdeling. In de volgende paragraaf gaan we aan de slag met de t-toets die i.t.t. de z-toets wel rekening houdt met het effect van steekproefgrootte op de kansverdeling. "],
["one-sample-t-test-in-r.html", "one-sample t-test in R", " one-sample t-test in R De functie voor de t-toets in R is t.test(). Deze functie heeft als argument een vector (rij data) nodig. Daarnaast kan je onder andere de volgende opties aangeven: mu = … (een getal waartegen je de dataset test, standaard is 0) alternative = (kies uit “greater” of “less” als je eenzijdig wilt testen) Als voorbeeld willen we testen of het gemiddelde voor biocalculus1 hoger ligt dan 6: library(readxl) cijfers &lt;- read_excel(&quot;../data/cijfers.xlsx&quot;) t.test(cijfers$biocalculus, mu=6, alternative = &quot;greater&quot;) ## ## One Sample t-test ## ## data: cijfers$biocalculus ## t = 3.3258, df = 205, p-value = 0.0005223 ## alternative hypothesis: true mean is greater than 6 ## 95 percent confidence interval: ## 6.215195 Inf ## sample estimates: ## mean of x ## 6.42767 In bovenstaande output zie je de berekende t-waarde (t), het aantal vrijheidsgraden (df) en de p-waarde (p-value). Verder ook het betrouwbaarheidsinterval (die voor een eenzijdige toets naar oneindig loopt (inf) en het gemiddelde van de steekproef. Om te checken of de t-toets wel een betrouwbare p-waarde geeft voor de waarschijnlijkheid dat de H0 waar is, kan je de volgende code uitvoeren: #Nu met t-toets ttoets &lt;- function(n, mu, sigma) { sample &lt;- rnorm(n, mu, sigma) return(t.test(sample, mu=mu)$p.value) } #10000 keer bovenstaande functie uitvoeren tp &lt;- replicate(10000, ttoets(n=3, mu=540, sigma=5)) #Fractie gevallen waarin H0 ten onrechte wordt verworpen alpha &lt;- 0.05 length(tp[tp&lt;alpha])/length(tp) ## [1] 0.0488 In 1996 heeft statistiekdocent Allen Shoemaker een dataset met lichaamstemperatuur, hartslag en geslacht van 130 studenten gepubliceerd. Op blackboard vind je een naar Celsius omgerekende versie hiervan. Opdracht 17 Eenzijdige t-toets Test met een eenzijdige t-toets of de gemiddelde lichaamstemperatuur afwijkt van 37°. Schrijf eerste de nulhypothese en alternatieve hypothese op. Voer de toets en geef de conclusie. "],
["gepaarde-t-toets.html", "Gepaarde t-toets", " Gepaarde t-toets Lees Paragraph 12.1 (Paired sample versus two independent samples) Lees Paragraph 12.2 (Paired comparison of means) Met een enkelvoudige t-toets (one-sample t-test) bereken je de overschrijdingskans van een steekproef t.o.v. een normaal verdeelde waarde. Een voorbeeld van vorige week: “wat is de kans op een gemiddeld gewicht van een steekproef van 5 koeien van kleiner of gelijk aan 530 kg, aangenomen dat een koe gemiddeld 540 kg weegt?”. In de vorige les hebben jullie ontdekt dat de kansverdeling van een steekproefgemiddelde alleen een normale verdeling volgt als je van tevoren weet wat de standaarddeviatie is in je populatie. Wanneer je dat niet weet, en de standaarddeviatie schat aan de hand van je steekproef, dan wijkt de verdeling iets af van de normale verdeling. Deze kansverdeling volgt een t-verdeling. Door een t-toets te gebruiken, i.p.v. een z-toets, kan je wel de juiste overschrijdingskans berekenen. "],
["gepaarde-data.html", "Gepaarde data", " Gepaarde data De one-sample t-test kan je ook gebruiken als je verschillen tussen twee behandelingen wil laten zien als de data gepaard is. Je laat bevoorbeeld studenten een wiskundetoets doen voor en na een paar glazen bier. Natuurlijk verwacht je dat je rekencapaciteit achteruit gaat na het drinken van bier (toch?), De hypotheses zijn: H0: Score vóór drinken is gelijk aan score ná het drinken van bier. H1: Score vóór drinken is lager dan score ná het drinken van bier. Onder de H0 verwacht je dat de score voor en na het drinken van bier gemiddeld gelijk is. Met andere woorden: het verschil tussen voor en na is gemiddeld 0. Stap 1 is voor iedere student het verschil te berekenen tussen beide testen. Stap 2 is om te berekenen wat de overschrijdingskans is van deze uitkomst als de H0 waar is. Dat doe je met een one-sample t-test. Maar deze twee stappen kan je ook in één keer uitvoeren met een gepaarde t-toets (paired t-test). "],
["gepaarde-t-toets-1.html", "Gepaarde t-toets", " Gepaarde t-toets Belangrijk met gepaarde data is dat het helder is welke metingen bij elkaar horen. Dat doe je door op de volgende manier je data te ordenen: student voor na 1 7 5 2 4 4 3 6 5 4 9 7 5 5 5 Wanneer je de data ingelezen hebt in R (bijv. als objectnaam bier), kan je met de volgende functie een gepaarde t-toets uitvoeren: t.test(bier$voor, bier$na, paired = TRUE) Opdracht 18 Macho merels Download met de volgende functie de data van de Red-winged Blackbirds: blackbird &lt;- read.csv(url(&quot;http://www.zoology.ubc.ca/~schluter/WhitlockSchluter/wp-content/data/chapter12/chap12e2BlackbirdTestosterone.csv&quot;)) Voor dezelfde toets uit als in het boek. Check evt. de opties voor de functies via de code ?t.test "],
["onafhankelijke-t-toets.html", "Onafhankelijke t-toets:", " Onafhankelijke t-toets: Lees Paragraph 12.3 (Two-sample comparison of means) NB: je hoeft niet de berekeningen te kennen. Bij een one-sample t-test en een gepaarde t-toets heb je te maken met één rij data waarvan je wilt weten of het gemiddelde ervan significant afwijkt van een bepaalde waarde. Maar vaak heb je te maken met meerdere groepen waarvan je wilt weten of ze écht van elkaar verschillen. De nulhypothese is dan dat het gemiddelde van de groepen niet van elkaar verschillen. Dat is een subtiel verschil met de gepaarde t-toets waarbij je voor iedere herhaling verwacht dat eerste en tweede behandeling gelijk aan elkaar zijn. Opdracht 19 Gepaard of niet? Los Practice problem 12.4 (blz. 355) op "],
["standaarddeviatie.html", "Standaarddeviatie", " Standaarddeviatie Bij een one-sample t-test is het recht-toe-recht-aan om de standaarddeviatie te schatten. Je hebt één rij data waarvan je gemiddelde en steekproefstandaarddeviatie berekent. Aan de hand daarvan bepaal je hoe waarschijnlijk je afwijking is ten opzichte van je nulhypothese. In de traditionele onafhankelijke t-toets (independent t-test) wordt de standaarddeviatie van het verschil in de gemiddelde waardes van beide groepen geschat via een gewogen gemiddelde van de standaarddeviaties in beide groepen. Dat werkt alleen als de standaarddeviatie niet te veel verschilt tussen de twee groepen. Verschilt de standaarddeviatie flink van elkaar, dan kan je bovenstaande aanpak niet gebruiken. Je moet dan een alternatieve toets gebruiken, de Welch’s t-toets. Deze toets maakt niet de aanname dat de standaarddeviatie gelijk is in beide groepen. In de praktijk wordt tegenwoordig aangeraden om altijd de Welch’s t-toets te gebruiken, tenzij je sterke aanwijzing hebt dat je de standaardeviaties voor beide groepen gelijk zijn. Zie ook het volgende artikel. "],
["t-toets-in-r.html", "T-toets in R", " T-toets in R De one-sample t-test, de gepaarde t-toets, de onafhankelijke t-toets en de Welch’s t-toets zijn allemaal uit te voeren met de volgende functie: t.test(). In dit hoofdstuk willen we twee groepen vergelijken. Dat kan je op twee manieren aangeven in t.test(): t.test(g1, g2) t.test(v~g) De eerste optie is hetzelfde als je bij de gepaarde t-toets hebt gezien: g1 en g2 zijn twee vectoren. In tegenstelling tot bij de gepaarde t-toets, hoeft bij een onafhankelijke t-toets of Welch’s t-toets beide vectoren niet even lang te zijn. De tweede optie heeft de voorkeur. Waarom? Omdat die aansluit bij de standaardmanier om je data te organiseren. Heb je bijvoorbeeld de lengte van planten gemeten in twee groepen (bijv, met of zonder bemesting), dan is dit de manier om je data in een tabel te zetten: behandeling plantlengte controle 15 controle 17 controle 16 controle 14 controle 16 bemest 15 bemest 23 bemest 21 bemest 27 bemest 18 Met de tweede optie (v~g) geef je aan dat de vector verdeeld is in groepen (aangegeven met de variabele g). In het geval van het bemestingsexperiment voor je met de volgende code de Welch’ t-toets uit: t.test(plantdata$plantlengte~plantdata$behandeling). De standaardinstelling van R voor t.test() is dat er geen gelijke variantie wordt aangenomen, dus de Welch’t-toets wordt uitgevoerd. Wil je wel een ‘gewone’ onafhankelijke t-toets uitvoeren, moet je expliciet aangeven dat er gelijke standaarddeviatie wordt aangenomen voor beide groepen (`t.test(v~g, var.equal = TRUE)). Opdracht 20 Bemesting Voer de data uit bovenstaande tabel in een Excel file Formuleer de H0 en H1 Maak een script die de data importeert en een t-toets uitvoert. Wat is je conclusie? Opdracht 21 Bier en muggen Voer Practise problem 12.16 (blz. 359) uit "]
]
